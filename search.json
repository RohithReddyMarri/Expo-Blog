[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "GridSpec",
    "section": "",
    "text": "Load the datasets\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimple Visualisation\n\n\n\n\n\n\nML\n\n\n\n\n\n\n\n\n\nFeb 14, 2025\n\n\nNipun Batra\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome\n\n\n\n\n\nWelcome Post\n\n\n\n\n\nFeb 14, 2025\n\n\nNipun Batra\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome.html",
    "href": "posts/welcome.html",
    "title": "Welcome",
    "section": "",
    "text": "Welcome\nHello world, this is my first blog post.\nI can write in markdown\nprint(\"Hello World\")\nI can also write math equations:\n\\[\ny = x^2\n\\]\nI can create lists easily:\n\nOne\nTwo\n\nI can also create numbered lists:\n\nOne\nTwo\n\nOr, create a table:\n\n\n\nName\nAge\n\n\n\n\nAlice\n20\n\n\nBob\n21"
  },
  {
    "objectID": "posts/J089_Assignment_3-checkpoint.html",
    "href": "posts/J089_Assignment_3-checkpoint.html",
    "title": "Load the datasets",
    "section": "",
    "text": "import pandas as pd import matplotlib.pyplot as plt import seaborn as sns\n\nLoad the datasets\nstate_data = pd.read_csv(‘State_data.csv’) ncap_funding = pd.read_csv(‘NCAP_Funding.csv’) pm25_data = pd.read_csv(‘Data.csv’)\nArea Based\n\n#Ans 1\nstate_data.rename(columns={\"State\": \"state\"}, inplace=True)\ndf_pollution_clean = pm25_data.dropna(subset=[\"PM2.5\"])\npm25_avg_per_state = df_pollution_clean.groupby(\"state\")[\"PM2.5\"].mean().reset_index()\ndf_merged = pd.merge(pm25_avg_per_state,state_data, on='state')\ndf_merged[\"PM2.5 per sq km\"] = df_merged[\"PM2.5\"] / df_merged[\"Area (km2)\"]\ndf_merged_sorted = df_merged.sort_values(by=\"PM2.5 per sq km\", ascending=False)\nmost_polluted_state = df_merged_sorted.iloc[0][\"state\"]\nprint(f\"State with the highest PM2.5 concentration per square kilometer: {most_polluted_state}\")\nplt.figure(figsize=(14, 8))\nplt.bar(df_merged_sorted[\"state\"], df_merged_sorted[\"PM2.5 per sq km\"], color='red')\nplt.xticks(rotation=90)\nplt.xlabel(\"States\")\nplt.ylabel(\"PM2.5 Concentration per sq km\")\nplt.title(\"PM2.5 Concentration per Sq km by Various States\")\nplt.grid(True, linestyle=\"--\", alpha=0.5)\nplt.show()\n\nState with the highest PM2.5 concentration per square kilometer: Chandigarh\n\n\n\n\n\n\n\n\n\n\n#Ans 2\nstate_data.rename(columns={\"State\": \"state\"}, inplace=True)\nstation_count_per_state = pm25_data.groupby(\"state\")[\"station\"].nunique().reset_index()\nstation_count_per_state.rename(columns={\"station\": \"Number of Stations\"}, inplace=True)\ndf_station_density = pd.merge(station_count_per_state,state_data,on=\"state\")\ndf_station_density[\"Stations per sq km\"] = df_station_density[\"Number of Stations\"] / df_station_density[\"Area (km2)\"]\ndf_station_density_sorted = df_station_density.sort_values(by=\"Stations per sq km\", ascending=False)\nmost_dense_state = df_station_density_sorted.iloc[0][\"state\"]\nprint(f\"State with the highest density of monitoring stations: {most_dense_state}\")\nplt.figure(figsize=(14, 8))\nplt.bar(df_station_density_sorted[\"state\"], df_station_density_sorted[\"Stations per sq km\"], color='coral')\nplt.xticks(rotation=90)\nplt.xlabel(\"States\")\nplt.ylabel(\"Monitoring Stations per sq km\")\nplt.title(\"Density of Monitoring Stations per Sq km by Various States\")\nplt.show()\n\nState with the highest density of monitoring stations: Delhi\n\n\n\n\n\n\n\n\n\n\n#Ans 3\nstate_data = pd.read_csv(\"State_data.csv\")\ndata_pollution = pd.read_csv(\"Data.csv\")\n\ndata_pollution[\"Timestamp\"] = pd.to_datetime(data_pollution[\"Timestamp\"], errors='coerce')\n\ndata_2021 = data_pollution[(data_pollution[\"Timestamp\"].dt.year == 2021) &\n                       (data_pollution[\"state\"].isin([\"Maharashtra\", \"Madhya Pradesh\"]))]\n\npm25_avg = data_2021.groupby(\"state\")[\"PM2.5\"].mean().reset_index()\n\npop_area_data = state_data[state_data[\"State\"].isin([\"Maharashtra\", \"Madhya Pradesh\"])][[\"State\", \"Population\", \"Area (km2)\"]]\n\npop_area_data[\"Population Density\"] = pop_area_data[\"Population\"] / pop_area_data[\"Area (km2)\"]\n\nanalysis_data = pop_area_data.merge(pm25_avg, left_on=\"State\", right_on=\"state\").drop(columns=[\"state\"])\n\nprint(analysis_data)\n\nfig, ax1 = plt.subplots(figsize=(8, 5))\nax1.bar(analysis_data[\"State\"], analysis_data[\"Population Density\"], color='skyblue', label=\"Population Density\")\nax1.set_ylabel(\"Population Density (people per sq km)\", color='blue')\nax1.tick_params(axis='y', labelcolor='blue')\n\nax2 = ax1.twinx()\nax2.plot(analysis_data[\"State\"], analysis_data[\"PM2.5\"], color='red', marker='o', linestyle='-', label=\"PM2.5 Levels\")\nax2.set_ylabel(\"Average PM2.5 (µg/m³)\", color='red')\nax2.tick_params(axis='y', labelcolor='red')\n\nplt.title(\"Population Density vs PM2.5 Levels (2021)\")\nfig.tight_layout()\nplt.show()\n\n            State  Population  Area (km2)  Population Density      PM2.5\n0     Maharashtra   112374333      307713          365.192023  46.440044\n1  Madhya Pradesh    72626809      308252          235.608557  47.095952\n\n\n\n\n\n\n\n\n\nFunding Based\n\n#Ans 1\nncap_funding['Amount released during FY 2021-22'] = pd.to_numeric(ncap_funding['Amount released during FY 2021-22'], errors='coerce')\n\nfunded_states_2021 = ncap_funding[ncap_funding['Amount released during FY 2021-22'] &gt; 0]['State'].unique()\n\nfunded_states_data = data[data['state'].isin(funded_states_2021)]\nnon_funded_states_data = data[~data['state'].isin(funded_states_2021)]\n\navg_pm25_funded = funded_states_data['PM2.5'].mean()\navg_pm25_non_funded = non_funded_states_data['PM2.5'].mean()\n\nprint(f\"Average PM2.5 for states that received NCAP funding in 2021: {avg_pm25_funded}\")\nprint(f\"Average PM2.5 for states that did not receive NCAP funding in 2021: {avg_pm25_non_funded}\")\n\nAverage PM2.5 for states that received NCAP funding in 2021: 62.22735848700783\nAverage PM2.5 for states that did not receive NCAP funding in 2021: 52.65062674226705\n\n\n\n#Ans 2\nassam_pm25_data = pm25_data[pm25_data[\"state\"] == \"Assam\"].copy()\nassam_pm25_data[\"Timestamp\"] = pd.to_datetime(assam_pm25_data[\"Timestamp\"])\nassam_pm25_trend = assam_pm25_data.groupby(\"Timestamp\")[\"PM2.5\"].mean().reset_index()\nassam_funding_data = ncap_funding[ncap_funding[\"State\"] == \"Assam\"].copy()\nfunding_columns = [\n    \"Amount released during FY 2019-20\",\n    \"Amount released during FY 2020-21\",\n    \"Amount released during FY 2021-22\",\n    \"Total fund released\",\n]\nfor col in funding_columns:\n    assam_funding_data[col] = pd.to_numeric(assam_funding_data[col], errors=\"coerce\")\nassam_funding_summary = assam_funding_data[funding_columns].sum().reset_index()\nassam_funding_summary.columns = [\"Year\", \"Funding Amount\"]\nyear_mapping = {\n    \"Amount released during FY 2019-20\": \"2019-04-01\",\n    \"Amount released during FY 2020-21\": \"2020-04-01\",\n    \"Amount released during FY 2021-22\": \"2021-04-01\",\n}\nassam_funding_summary[\"Year\"] = assam_funding_summary[\"Year\"].map(year_mapping)\nassam_funding_summary.dropna(inplace=True)\nassam_funding_summary[\"Year\"] = pd.to_datetime(assam_funding_summary[\"Year\"])\nfig, ax1 = plt.subplots(figsize=(10, 5))\n\nax1.plot(assam_pm25_trend[\"Timestamp\"], assam_pm25_trend[\"PM2.5\"], color=\"red\", label=\"PM2.5 Levels\")\nax1.set_xlabel(\"Year\")\nax1.set_ylabel(\"PM2.5 (µg/m³)\", color=\"red\")\nax1.tick_params(axis=\"y\", labelcolor=\"red\")\n\nax2 = ax1.twinx()\nax2.scatter(assam_funding_summary[\"Year\"], assam_funding_summary[\"Funding Amount\"], color=\"blue\", label=\"NCAP Funding\", marker=\"o\", s=100)\nax2.set_ylabel(\"NCAP Funding (Cr)\", color=\"blue\")\nax2.tick_params(axis=\"y\", labelcolor=\"blue\")\n\nplt.title(\"PM2.5 Levels and NCAP Funding in Assam\")\nax1.legend(loc=\"upper left\")\nax2.legend(loc=\"upper right\")\n\nplt.show()\n\n\n\n\n\n\n\n\nNCAP_Funding of Assam has been increased in the year 2020-2021 and clearly we can see that in that period the value of PM_2.5 has also increased indicating that the Quality of Air has Decreased. Therefore, increment of the financing didn’t lead to noticeable improvements in air quality.\n\n#Ans 3\nstate_data.columns = state_data.columns.str.strip()\nncap_funding.columns = ncap_funding.columns.str.strip()\n\n# Group NCAP funding by state and calculate the sum of funds released\nfunds_by_state = ncap_funding.groupby('State')['Total fund released'].sum().reset_index()\n\n# Merge the funds data with state area data\nmerged_data = pd.merge(state_data, funds_by_state, on='State', how='inner')\n\n# Create scatter plot for area vs total fund released\nplt.figure(figsize=(12,8))\nsns.scatterplot(x=merged_data['Area (km2)'], y=merged_data['Total fund released'], \n                hue=merged_data['State'], palette='tab20', s=100)\n\n# Customize the plot\nplt.xlabel('Area (km²)')\nplt.ylabel('Total NCAP Funding Released (in Crores INR)')\nplt.title('Area vs Total NCAP Funding Released by State')\nplt.legend(loc='center left', bbox_to_anchor=(1, 0.5), title='States')\n\n# Show the plot\nplt.tight_layout()\nplt.show()"
  },
  {
    "objectID": "posts/visualisation.html",
    "href": "posts/visualisation.html",
    "title": "Simple Visualisation",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\n\n\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\nplt.plot(y,x)\n\n\n\n\n\n\n\n\n\nprint(\"Hello World1\")\n\nHello World1\n\n\n\nprint(67358478498)\n\n67358478498\n\n\nMy name is Billa"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto Template",
    "section": "",
    "text": "Quarto template Text!"
  }
]